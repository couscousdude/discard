generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model card_data {
  id        String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  card_id   String @db.Uuid
  data_type String @db.VarChar(20)
  data      Json?
  cards     cards  @relation(fields: [card_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([card_id], map: "idx_card_data_card_id")
}

model card_sets {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id     Int
  title       String
  description String?
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  cards       cards[]

  @@index([user_id], map: "idx_card_sets_user_id")
}

model cards {
  id          String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  card_set_id String      @db.Uuid
  front_text  String
  back_type   String      @db.VarChar(20)
  created_at  DateTime?   @default(now()) @db.Timestamp(6)
  updated_at  DateTime?   @default(now()) @db.Timestamp(6)
  card_data   card_data[]
  card_sets   card_sets   @relation(fields: [card_set_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([card_set_id], map: "idx_cards_card_set_id")
}
